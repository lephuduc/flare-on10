package com.google.android.gms.measurement.internal;

import androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat;
import com.google.firebase.messaging.ServiceStarter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/* loaded from: classes.dex */
public final class zzeg {
    public static final zzef zzA;
    public static final zzef zzB;
    public static final zzef zzC;
    public static final zzef zzD;
    public static final zzef zzE;
    public static final zzef zzF;
    public static final zzef zzG;
    public static final zzef zzH;
    public static final zzef zzI;
    public static final zzef zzJ;
    public static final zzef zzK;
    public static final zzef zzL;
    public static final zzef zzM;
    public static final zzef zzN;
    public static final zzef zzO;
    public static final zzef zzP;
    public static final zzef zzQ;
    public static final zzef zzR;
    public static final zzef zzS;
    public static final zzef zzT;
    public static final zzef zzU;
    public static final zzef zzV;
    public static final zzef zzW;
    public static final zzef zzX;
    public static final zzef zzY;
    public static final zzef zzZ;
    public static final zzef zzaA;
    public static final zzef zzaB;
    public static final zzef zzaC;
    public static final zzef zzaD;
    public static final zzef zzaE;
    public static final zzef zzaF;
    public static final zzef zzaG;
    public static final zzef zzaH;
    public static final zzef zzaI;
    public static final zzef zzaa;
    public static final zzef zzab;
    public static final zzef zzac;
    public static final zzef zzad;
    public static final zzef zzae;
    public static final zzef zzaf;
    public static final zzef zzag;
    public static final zzef zzah;
    public static final zzef zzai;
    public static final zzef zzaj;
    public static final zzef zzak;
    public static final zzef zzal;
    public static final zzef zzam;
    public static final zzef zzan;
    public static final zzef zzao;
    public static final zzef zzap;
    public static final zzef zzaq;
    public static final zzef zzar;
    public static final zzef zzas;
    public static final zzef zzat;
    public static final zzef zzau;
    public static final zzef zzav;
    public static final zzef zzaw;
    public static final zzef zzax;
    public static final zzef zzay;
    public static final zzef zzaz;
    public static final zzef zzk;
    public static final zzef zzl;
    public static final zzef zzm;
    public static final zzef zzn;
    public static final zzef zzo;
    public static final zzef zzp;
    public static final zzef zzq;
    public static final zzef zzr;
    public static final zzef zzs;
    public static final zzef zzt;
    public static final zzef zzu;
    public static final zzef zzv;
    public static final zzef zzw;
    public static final zzef zzx;
    public static final zzef zzy;
    public static final zzef zzz;
    private static final List zzaJ = Collections.synchronizedList(new ArrayList());
    private static final Set zzaK = Collections.synchronizedSet(new HashSet());
    public static final zzef zza = zza("measurement.ad_id_cache_time", 10000L, 10000L, zzbh.zza);
    public static final zzef zzb = zza("measurement.app_uninstalled_additional_ad_id_cache_time", 3600000L, 3600000L, zzaz.zza);
    public static final zzef zzc = zza("measurement.monitoring.sample_period_millis", 86400000L, 86400000L, zzbl.zza);
    public static final zzef zzd = zza("measurement.config.cache_time", 86400000L, 3600000L, zzbx.zza);
    public static final zzef zze = zza("measurement.config.url_scheme", "https", "https", zzcj.zza);
    public static final zzef zzf = zza("measurement.config.url_authority", "app-measurement.com", "app-measurement.com", zzcv.zza);
    public static final zzef zzg = zza("measurement.upload.max_bundles", 100, 100, zzdh.zza);
    public static final zzef zzh = zza("measurement.upload.max_batch_size", 65536, 65536, zzdt.zza);
    public static final zzef zzi = zza("measurement.upload.max_bundle_size", 65536, 65536, zzdy.zza);
    public static final zzef zzj = zza("measurement.upload.max_events_per_bundle", 1000, 1000, zzdz.zza);

    static {
        Integer valueOf = Integer.valueOf((int) AndroidComposeViewAccessibilityDelegateCompat.ParcelSafeTextLength);
        zzk = zza("measurement.upload.max_events_per_day", valueOf, valueOf, zzbs.zza);
        zzl = zza("measurement.upload.max_error_events_per_day", 1000, 1000, zzcd.zza);
        zzm = zza("measurement.upload.max_public_events_per_day", 50000, 50000, zzco.zza);
        zzn = zza("measurement.upload.max_conversions_per_day", 10000, 10000, zzcz.zza);
        zzo = zza("measurement.upload.max_realtime_events_per_day", 10, 10, zzdk.zza);
        zzp = zza("measurement.store.max_stored_events_per_app", valueOf, valueOf, zzdv.zza);
        zzq = zza("measurement.upload.url", "https://app-measurement.com/a", "https://app-measurement.com/a", zzea.zza);
        zzr = zza("measurement.upload.backoff_period", 43200000L, 43200000L, zzeb.zza);
        zzs = zza("measurement.upload.window_interval", 3600000L, 3600000L, zzax.zza);
        zzt = zza("measurement.upload.interval", 3600000L, 3600000L, zzay.zza);
        zzu = zza("measurement.upload.realtime_upload_interval", 10000L, 10000L, zzba.zza);
        zzv = zza("measurement.upload.debug_upload_interval", 1000L, 1000L, zzbb.zza);
        zzw = zza("measurement.upload.minimum_delay", 500L, 500L, zzbc.zza);
        zzx = zza("measurement.alarm_manager.minimum_interval", 60000L, 60000L, zzbd.zza);
        zzy = zza("measurement.upload.stale_data_deletion_interval", 86400000L, 86400000L, zzbe.zza);
        zzz = zza("measurement.upload.refresh_blacklisted_config_interval", 604800000L, 604800000L, zzbf.zza);
        zzA = zza("measurement.upload.initial_upload_delay_time", 15000L, 15000L, zzbg.zza);
        zzB = zza("measurement.upload.retry_time", 1800000L, 1800000L, zzbi.zza);
        zzC = zza("measurement.upload.retry_count", 6, 6, zzbj.zza);
        zzD = zza("measurement.upload.max_queue_time", 2419200000L, 2419200000L, zzbk.zza);
        zzE = zza("measurement.lifetimevalue.max_currency_tracked", 4, 4, zzbm.zza);
        zzF = zza("measurement.audience.filter_result_max_count", 200, 200, zzbn.zza);
        zzG = zza("measurement.upload.max_public_user_properties", 25, 25, null);
        Integer valueOf2 = Integer.valueOf((int) ServiceStarter.ERROR_UNKNOWN);
        zzH = zza("measurement.upload.max_event_name_cardinality", valueOf2, valueOf2, null);
        zzI = zza("measurement.upload.max_public_event_params", 25, 25, null);
        zzJ = zza("measurement.service_client.idle_disconnect_millis", 5000L, 5000L, zzbo.zza);
        Boolean bool = Boolean.FALSE;
        zzK = zza("measurement.test.boolean_flag", bool, bool, zzbp.zza);
        zzL = zza("measurement.test.string_flag", "---", "---", zzbq.zza);
        zzM = zza("measurement.test.long_flag", -1L, -1L, zzbr.zza);
        zzN = zza("measurement.test.int_flag", -2, -2, zzbt.zza);
        Double valueOf3 = Double.valueOf(-3.0d);
        zzO = zza("measurement.test.double_flag", valueOf3, valueOf3, zzbu.zza);
        zzP = zza("measurement.experiment.max_ids", 50, 50, zzbv.zza);
        zzQ = zza("measurement.upload.max_item_scoped_custom_parameters", 27, 27, zzbw.zza);
        zzR = zza("measurement.max_bundles_per_iteration", 100, 100, zzby.zza);
        zzS = zza("measurement.sdk.attribution.cache.ttl", 604800000L, 604800000L, zzbz.zza);
        zzT = zza("measurement.redaction.app_instance_id.ttl", 7200000L, 7200000L, zzca.zza);
        Boolean bool2 = Boolean.TRUE;
        zzU = zza("measurement.collection.log_event_and_bundle_v2", bool2, bool2, zzcb.zza);
        zzV = zza("measurement.quality.checksum", bool, bool, null);
        zzW = zza("measurement.audience.use_bundle_end_timestamp_for_non_sequence_property_filters", bool, bool, zzcc.zza);
        zzX = zza("measurement.audience.refresh_event_count_filters_timestamp", bool, bool, zzce.zza);
        zzY = zza("measurement.audience.use_bundle_timestamp_for_event_count_filters", bool, bool, zzcf.zza);
        zzZ = zza("measurement.sdk.collection.retrieve_deeplink_from_bow_2", bool2, bool2, zzcg.zza);
        zzaa = zza("measurement.sdk.collection.last_deep_link_referrer_campaign2", bool, bool, zzch.zza);
        zzab = zza("measurement.lifecycle.app_in_background_parameter", bool, bool, zzci.zza);
        zzac = zza("measurement.integration.disable_firebase_instance_id", bool, bool, zzck.zza);
        zzad = zza("measurement.collection.service.update_with_analytics_fix", bool, bool, zzcl.zza);
        zzae = zza("measurement.client.firebase_feature_rollout.v1.enable", bool2, bool2, zzcm.zza);
        zzaf = zza("measurement.client.sessions.check_on_reset_and_enable2", bool2, bool2, zzcn.zza);
        zzag = zza("measurement.collection.synthetic_data_mitigation", bool, bool, zzcp.zza);
        zzah = zza("measurement.service.storage_consent_support_version", 203600, 203600, zzcq.zza);
        zzai = zza("measurement.client.click_identifier_control.dev", bool, bool, zzcr.zza);
        zzaj = zza("measurement.service.click_identifier_control", bool, bool, zzcs.zza);
        zzak = zza("measurement.service.store_null_safelist", bool2, bool2, zzct.zza);
        zzal = zza("measurement.service.store_safelist", bool2, bool2, zzcu.zza);
        zzam = zza("measurement.collection.enable_session_stitching_token.first_open_fix", bool2, bool2, zzcw.zza);
        zzan = zza("measurement.collection.enable_session_stitching_token.client.dev", bool2, bool2, zzcx.zza);
        zzao = zza("measurement.session_stitching_token_enabled", bool, bool, zzcy.zza);
        zzap = zza("measurement.sgtm.client.dev", bool, bool, zzda.zza);
        zzaq = zza("measurement.sgtm.service", bool, bool, zzdb.zza);
        zzar = zza("measurement.redaction.retain_major_os_version", bool2, bool2, zzdc.zza);
        zzas = zza("measurement.redaction.scion_payload_generator", bool2, bool2, zzdd.zza);
        zzat = zza("measurement.service.clear_global_params_on_uninstall", bool2, bool2, zzde.zza);
        zzau = zza("measurement.sessionid.enable_client_session_id", bool2, bool2, zzdf.zza);
        zzav = zza("measurement.sfmc.client", bool2, bool2, zzdg.zza);
        zzaw = zza("measurement.sfmc.service", bool2, bool2, zzdi.zza);
        zzax = zza("measurement.gmscore_feature_tracking", bool2, bool2, zzdj.zza);
        zzay = zza("measurement.fix_health_monitor_stack_trace", bool2, bool2, zzdl.zza);
        zzaz = zza("measurement.item_scoped_custom_parameters.client", bool2, bool2, zzdm.zza);
        zzaA = zza("measurement.item_scoped_custom_parameters.service", bool, bool, zzdn.zza);
        zzaB = zza("measurement.remove_app_background.client", bool, bool, zzdo.zza);
        zzaC = zza("measurement.rb.attribution.service", bool, bool, zzdp.zza);
        zzaD = zza("measurement.collection.client.log_target_api_version", bool2, bool2, zzdq.zza);
        zzaE = zza("measurement.collection.service.log_target_api_version", bool2, bool2, zzdr.zza);
        zzaF = zza("measurement.client.deep_link_referrer_fix", bool2, bool2, zzds.zza);
        zzaG = zza("measurement.client.sessions.enable_fix_background_engagement", bool, bool, zzdu.zza);
        zzaH = zza("measurement.link_sst_to_sid", bool2, bool2, zzdw.zza);
        zzaI = zza("measurement.client.ad_id_consent_fix", bool2, bool2, zzdx.zza);
    }

    public static zzef zza(String str, Object obj, Object obj2, zzec zzecVar) {
        zzef zzefVar = new zzef(str, obj, obj2, zzecVar, null);
        zzaJ.add(zzefVar);
        return zzefVar;
    }
}
