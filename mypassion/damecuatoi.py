import hashlib
from Crypto.Cipher import AES
from Crypto.Util.number import long_to_bytes 
from pwn import *
from arc4 import ARC4
import zlib
context.arch = 'ia64'
for i in range(0x2f,0x7f):
    for j in range(0x2f,0x7f):
        if i+j*4==0x127:
            # print('0'+chr(j)+chr(i) + '-'*2 + 'R' + '-brUce')
            pass
# v26 = [0]*0x19
key = hashlib.sha256(b"turnitup").digest()

enc = b'\xd7\xc0\xa8#cC\xb2\x15\x96\x9d\xf9\x1c>OH\xd3\x80!\xbd\xe41c\x8duCy|:*\x16\xf7\x87p\x87\xc6=%\x1d\x16S\x84D\x8c"\x05t\xd5g\x13\x19\xcd*OZnHc\x92\x8e`\xb7\xf0\x1e\x80\x8b\xaf\xab\xcc\xdb$\x9b\x13\xc5b\x8b\x96}\x88\xff\xff\x83Y\x15P\xfd+1ZH\xe6B\x89\xd1\xc5\xce\x12\x9b\xc0\xa92\xf7\xee\xed*\xec\x00%\xa4\x13\x12\xfc\xfe\x80H\xcb=\xa2,\x99zR\xe7\xad\x83\xc2\xb3\xac\xec7\x91\xcb5\x8e\r\x89\xe1\xfe\x84T\x08{[\xd5\x97\xbc\x92<\xb1\x95\xec\xb8\xe7\xb8\xc0\xadC-7 \x87\xc5\xc9>\xf2\xea\x99F\x9d\x81\x02\x07\x00\xc7\xdb7\x8c'

aes = AES.new(key,AES.MODE_CBC,b"capture_the_flag")
dec = aes.decrypt(enc)
# with open('buf.bin','wb') as f:
#     f.write(dec)
tmp_buf = ['-']*0x19
tmp_buf[0] = ord("R")
tmp_buf[1] = ord("\a")
tmp_buf[2] = ord("B")
tmp_buf[3] = 1
tmp_buf[4] = 74
tmp_buf[5] = 29
tmp_buf[6] = 92
tmp_buf[7] = 25
tmp_buf[8] = 75
tmp_buf[9] = 31
tmp_buf[10] = 76
tmp_buf[11] = 5
tmp_buf[12] = 75
tmp_buf[13] = 12
tmp_buf[14] = 73
tmp_buf[15] = 7
tmp_buf[16] = 78
tmp_buf[17] = 11
tmp_buf[18] = 94
tmp_buf[19] = 12
tmp_buf[20] = 91
tmp_buf[21] = 30
tmp_buf[22] = 77
tmp_buf[23] = 8
tmp_buf[24] = 70
v12 = 0
new_buf = []
i = 0
while i < 0x19:
    v14 = v12 ^ tmp_buf[i]
    v12 = tmp_buf[i]
    new_buf.append(v14)
    i+=1
# print(bytes(new_buf))  #b'RUECKWAERTSINGENIEURWESEN'
# susfunc0 = b'D\x8b\xd2L\x8b\xc9A\xb3/\x83\xfa\x01u\x10D8\x19u\x08I\xff\xc1E8\x19t\xf8I\x8b\xc93\xd2\xebAA:\xc3u9\xff\xc2A;\xd2u(L+\xc9t\x17I\x8b\xd0I+\xc8M\x8b\xd1\x8a\x04\x11\x88\x02H\xff\xc2I\x83\xea\x01u\xf2C\xc6\x04\x01\x00I\x8b\xc0\xc3I\xff\xc1E8Y\x01t\xf7I\x8dI\x01I\xff\xc1A\x8a\x01\x84\xc0u\xb8A;\xd2}\xbf3\xc0\xc3'

# with open('susfunc0','wb') as f:
#     # f.write(susfunc0)
#     pass
# susfunc1 = b'H\x89\\$\x08H\x89|$\x18H\x89T$\x10L\x8b\xc1H\x85\xc9tc\xb8\x00\x00\x00\x00f9\x01uYHcA<\x81<\x08P\x00\x00\x00uLD\x8b\x8c\x08\x88\x00\x00\x00L\x03\xc9E\x8bY L\x03\xd93\xc9A9I\x18v2A\x8b\x04\x8bH\x8b\\$\x10I\x03\xc0H+\xd8\x8b\xf9\x0f\xb6\x10D\x0f\xb6\x14\x18A+\xd2u\x08H\xff\xc0E\x85\xd2\x00\xeb\x85\xd2t\x15\xff\xc1A;I\x18r\xce3\xc0H\x8b\\$\x08H\x8b|$\x18\xc3A\x8bI\x00I\x03\xc8\x0f\xb7\x14y\x00\x8bI\x1cI\x03\xc8\x8b\x04\x91I\x03\xc0\xeb\xdb'
# with open('susfunc1','wb') as f:
#     # f.write(susfunc1)
#     pass

# in Proc
sus4 = b'2\x13\xea]\x98|A_Y|\xa1\x98\xc5c\xe4\x16\xf4\x98\xd4\xfba\x99_\xd0/d^\x88"x0\xc2sk\xde\x98\xd5\xceY\xfb/+h\xb6N\rb\xbe/\x109\xb3\xf0TH'
for i in range(0x2f,0x7f):
    tmp = list(sus4)
    tmp = [(j - i)&0xff for j in tmp]
    tmp = bytes(tmp)

# part 6
charset= 'AZBQCEDTEXFHGOHLIMJFKKLDMVNNOUPBQWRYSGTIUPVAWCXJYRZS'
d = {}
for i in range(0,len(charset),2):
    d[charset[i]] =  charset[i+1]
x = 'RUECKWAERTSINGENIEURWESEN'
part6 = ''
for c in x:
    part6 += d[c]
# print(part6)

# print(arc.decrypt(enc)[:100])


enc = b'Gf\x1e\x87\x9d\xecL\x90\x9b\xd9\xd1\xa0O91\x9ec3\xfd\xba\x01-\x9a\xbf\x04\t\xb7\x16=\xd8"_S\x0b\xd9R^\xa2|n\xbfnc\x00\x7f\xf5\xdf\x91\xb6~\xa9\xa3\xadC\x88\x008\xfb\xeaw\xbc\r\x01\x16\xd2z\xf2\x11\xca\x9b\x19% \xc9\x92\xa4\x1a\x7f\x89\xf4C \x91\xbb\x07\x8b\x81Wk7A\x95B+F\xcf\xe2y\xb7\xcb z\r\x8ee\xd2e{\x93\x80]$\x9d\xa9`\x9aa\x06\xe7\xcd\xd2M\x94\xfd\xb9\xe9\x1b\xf0_\x87Cu\xce\x96\nE\x033P&\xf7\xee_*WbU\x86\x99\xb9\xc5~\xa8\xbc\x84\xa4\x0b\xcc7\xe9\xef\xd8kt\xa6\xa8\x8c\xdf\xc9\x9a\x96E\xdd\xf1\xba;ft\xb1\xfb\xd7\xca\xb7]\xe7\x9f\xe3\xf4\x93\xfe5\xa2\xc8\x19\xbc\xcb=\xc2\xbf\xc6\xff\x13+ ,\x93y\x99\xcb%\x1e5:\xa6&R\xd1\xdb\x04\x97\x010o\x1b\xeb%\xb1\x02\x85\xc2\x05\'\\\xb0\x0cV\xa0\xb2\x14I\x04\x07\rA"\xfd\x8dX\x0c\xe3\xb8\xd9\x94&\xd6\xf9\xd2=\xa0aX\tE\xb0QtS\x0e\x98cJ\xe1%$\xe4\xdd5\x05\x1f\xad\x7fH\x04vc\x1boR\xaa\\\xac;\xb3\xc9\xd6zV\xa8\xd8O*\xbee\xbe\x85\xa9\xad\x9fJ4\xd1\x96K\x1a\xa9$\xcb\x05j4y\xd0O=g\xc4\xc0y\xd1\xdb#TK\xa9R*C\xbe\xb5\xd6\x97\xeb1\x0b\x9cLJ\x9aQ\xac\x91\xbd\x18\xd1"\x1c\x85\xa1\x0c\xceo\x1aI\xb3\x06\xff\xd9\xc3b*\xe5y)F$\xb2\xdd2\xb3\x07\xfd\x89\xe7\x02\xdbF\xde\xd1\x1b,<\xe4\xceV\xf3k\'\xc7\xd5-\x8c\x0f=\x13\x1c4(\xa3\x9bT\xe9\xa2F\x13\xd6\x0f\xe7\xb1\xed}\xa2Q\x89\xb0\xc1\xc6O\x00E\xe8\xd9fnY7?K\x07\x97\xf1\xae\x83 \xd7\x1c\xf2+$"3\xd3\xe6\xc7)nv\x1ej5\x1c~\x14\xe3\xf5GP"as\x9f\xb5a\x94*\xf8\x9a\x1b^\xbet*\x9e|\xb1\x0e\xb5\x8b-\xed\xd3\xa7\x9a\xa2\xef\xe4s\xf8\xf3\x7f\x13\xc9\xf3\x18\x8c\xc7\xccO\xd3\x01\xa0/\xb3@\xdb\x05?\xbct\xf8H\xe8\xd6]\x89\xe8\xc0\x06\x8a$i\x7f\x8aB\xe9\xea\x0e\x86\xff\xd4\xef\xf8\xb3\x0b\xfd\x904{-\x0es\\\xe7R\xa2f\x1aR\xd6\xb5\x8e\xb8+\x9a}\xeb,h\x87Jt=\xdc\x13\x98\xc7\xf7E\x0f\xaf:\xdaZ\xf1\xc1\t\xe8\\\x86\x18\x8b\xdao\xda\xc6j\xbe9\xf8\xcf\xe6\xf0\xbb\x96\xed\xd9\xd4\x0c\xf2\x87V\xecm"\xa0Q\xf5\xab\xba\xd39\xcd\x96\xe9h\x96\xb6\x98.\x9c\xc8\x9d\x84\xe5\x14D\'\xe0\x12\xe0\xc4`\tfM\x19E"\xf5cU\x06\xb7Y\xf8\xfa\x8a\xc4\xa1\xe0\x1fdg\xe9\xbf.\xad^z\xb4\x91#\xffI\x1d\x1b\xca\xaf\xa4\x8fq\xaa\xe6\xaeo%\xc3_\xac\xd6`\x85\x8a\xa2 <\x95\x82\x1f\xd9\x17\xa3\xbf\x19\xcf{\x86\xaa\xd0\x87\x01\x94\x170\x7f\x00\x9d\xec\xdb\x1ek\xc4\x82\xf7\x0bu\x92\x0e#\x88M=J\xd6\x9b{\xd7boU\xdf\xfe\x9c\x1c\xdb\x00\xf4/%n\xe4\xc5\x0eA\x8f\xa9\xe4\xbf\xfe\xae\x8c\x82\x9c\x1b[_\xe4\xacCb\xd2o\xce\xa2\xe8\x05\x855\xa2\r\x08\xd1\xa6\x11\x1c\xf2\xe5G\xd1\xb71\x9e\xcf\x01\x1b\xf1\tF\x06\x15\xbeI\\\x0fc\xf8G\xf2\x8c\x04\x8e\x95\xa4\x0e\xb8\xcf\x05\xac\xe3\x14"\x18\xac\xb6ql".\x9c\xd1\xd7\xd6!\x8f\xad|j\xa9^4[\x8f\xa8F\xa0T\xc7Qm\xf7J0[(\x00\x87\x88\x83U\xa1C\x94\xc5\xb3\x95\xc2\x19\xa1&\xc7\xb7\xe2\xfcf\xbeA\x15\xb8\xb6\xf8\x15\xcavhA\x851\xfexc\xf5:Qbr\xe8\xea\xee36\xb7\xd9\x98\xd3*\xaa\xd5\x13\x0c\x19\x16!\x1d\xb2\xe3\xd9c\x893f\xc9A\x81\xe8\xf8\x1f@V;\x802\x1b\x94\xc0\xbb\xdbQ\xc3%\xa6\xa0\xb1<\x7f\x1c\x91Z\xb0\x98\xf3=\x00,&FD6g3\x0c\x0c'
# print(len(enc))
part7 = b'ob5cUr3'
key = hashlib.sha256(part7).digest()
aes = AES.new(key,AES.MODE_CBC,b"capture_the_flag")
dec = aes.decrypt(enc)
print(dec)
tmp = b'\x98\x9b\x08Y\x03\xf3\xba\x81\xfe\xefj\x1b\x08\xd8\xf3s\xed\xdfV\x89\xdf\xa2\xf4.\xcb\x07\xb6S\x16\xa0Y\xf6\x12\xdc\xafB\xbaN\xf5\x9f\xad\x87kPBK\xa5\x02;\x89#\xf7\x02\x95F\xa5^\xf2\xf7r\x04o]$N\xda\xd8\xa7\x01\x91\xfb+\xac\xcb\x1day\xe2JO"\x8e\xfa\xdb\x82\x95\xdcn\x12\xd2\xed|\xb6\xc6\xd8\xc4\x02\xe2\x93\xca.1\xbb\x19\x1d\x18\x12ceq\x83;w\xb8c\xb7\xb6\xd6\xc3\x82\xaf\x96\xc2\xdb]\xa9&)\x86\xdd\xbf\x17V\xb1*X\xf7\x11\xeb\xe8\xfe\xf6\x9cg9\xdd\xd5~VX\xcdaW\xed\xc7\xef\x08\xd5!\xb0\xbds/T\xd9F\x8f@\xa3\x8e\x1fV#3(\xba\xd67\x91\x085\xd4E\r\x84\xd750xF4\x99\x1e\\\xd02\xcd\x1a8\xc4\x18]X\xc9\xc3\xb2\xcd\xc4\xc4n\xae]\xac\n\xb7\x83C\x00\xe0\xd8\xf7\xf2\x9f\xe4@oT\xe5\x12\xe7\xe5+\x9f\x05\x91\xfd\x05:j\t\x83\x8a\x82\xe6\xc2\x0b\xb8C\x9a\x1ecu\xe6\x94A\x0e\x0f\xe5\x1e\xa2\xa4\x7f\x92|PZrT\x15\x9ew\x1d\xcdd`\xea\xbf\xdb\xf9\x0b\xbc\xb5=v\xf0w\xaa\xf1\xcc\x0e\xfe!-]\x13C\n{\xbfl\x0e8\xff\xd7\x9f;\x87\xe2K\xeb\x85\r\xb9\n\xe9eS=fp\xd0Y\x13]\t\xcf]1\xcb\x00p\xedw\xd70\xb6G\x0ci0f\xe3\x8ejL\xe0\x91\xa7\xd6|T\xcd\xce\x91\x00`@\xd7\xab\xd4\xd2\xb92i\xa1\xefb\x90\xfb\xf7?\x87\x83=Z\x12\xb5g\xb6\xe3s\xc8\xcb,%e\xe3P6\xb9\xd8\xe1I\xa4\xe8\xe4S\x97\xb8\xf7:"\x85i\x02hk\xf1^Jk\x99Y\x03\xb2\xb4\xc4\x99\xee\x86H\x00\xf2d\xb3\x1c\x9e\xb5\x17Rk\xb0\xa0\xda9l\x95\xe1\xcb>\x8e\xe1\x89\x9a\xae\xa5^$\x83\xa5\x9e\x9ff\x08\xcao\xd6(\xcc6T\x17K\x9e\xd7\xe8\x88\x19\x9bIFQ\xe8\xd8AD\x9c\xdb\x84f(\xbf;\xc6V\xac\xab\xda\x14\x83\x153\xc4\x02\xac\xdf\x8c.\xffu\xa5i\xf5\xb2\x18w"\xb4\xbcJ\x87\xc0z\xa8\x16\x83\xac\xc2\xfa\xf3\xcc\xc9-d\x05\xa8\xdbj&\xb8F\xbf\xaa\xb8\xa9\xe7\x86J\xa1\xb0\xe4~\xda}\x913\xfc\x93k\xff5a\x1c\xed\xec_\x1d\x0b\x1a\xae\x9b.)G{\xb4\xc3\x8b\x8b\xe3`\x8cr&p0\xebr\xbd[uX\xbe!\xa1\r\x9f%?C\xfd\xab%\xad-\xb7\xa9\xb3\xec\x90\xf0vHR^\xec\xf7|\xbb\xb9\xb6HX\xad\x12\x99~|vbQ\x99\xfb\xd0\xf5\xd5nC\xcb:\xf6,\xe0\x93\x84+\xefY\xbf\xc5\xdf~>^\x8f\xb5\xf6\x07n\xbd \xe8\xe4H\xbb\x81\xb9r\xe6\xc23\x90\xc8L\x9d1\xd5F\xb4n@\tn\xc96\xbbz\xca\x83C\x017\xea\xe2\xb0\x9cb8\xe7\xa5\xd3\x18\rV\x93h\x86\xcdk\x87\xf0\xea\x13h\xc8b\xdd:\x926N\xaf\xde\xbf3{D\xf6X\xbc%w\xfe\x14\x96H\xc1\xbe\xb9p\xd7\xb0\x9a\xf1\xf3i\xceN\xc1\x02\x0fH\xfc\x9d\x1c\x96\x0eHY\xfb\xc0&\xafe%\x81\x95Md\xda~\x8e\xfd\xddgH\xef\x9e\xdfn\xde\x01\xf4\xce/\x17s\x1dE\xb9\x08\xcf&\xe5\xffL\xa8$\xef\xfb\xda\xcb\x9d\xa1\xf9\xf0_,\xc8c\x90/\xe1\xfe-Y\xf3\xadoH\xd0\xabBy\xe21\xd1\xe9K\xee~\x05\x1e\xe4\x0e\x0c\xbau\x90L\x048_2|B~d\xccj;\xc0\x07\x8e6D\xa3$M<\x96\x8b[\x0c8\xb5\x96\xe2\x10\xf1\xad\xe0\x94N<"1qDY\x86j\xa8\x87o(\x15\x8a\xb3\x91(\xf6j\xcf\x96\x99/\xda^\x15N\xcdK\xb4\xd4\x0b$_\xfb\x07\xd7r\xc0\xc8+or\x7fs\xb9\xe0\x80\x86=\xf7a@\x14\xc8A\x08O\xfe\x1a\xf0\x0fI\x01\xfa\n\xe6\x82\x17\xd1\x87\xa0\xdc\xee\xeai\xde\x1co\xb5\x01\xe8e\x89U\x1e\x00,&FD6g3\x0c\x0c'

    # if 0xc3 in dec:
        # print(dec,hex(i))

# 01c--R_brUce/1337pr.ost/0000/7pizza/----EL32---/YPXEKCZXYIGMNOXNMXPYCXGXN/ob5cUre/abcdefghijklmnop/0123456789/ABCDEFGHIJKLMNOP/
# parse each part, part 2 mean to write file, and read file
# part 3 alway check for zero
# part 4 check pizza, and part4[0] is sub for each element in buffer sus4
# part 5 parsed and length must be 13 or more (maybe)
# part5[0]==part5[10]
"0=3deR@brUc3C/1337pr.ost/0000/ pizza/AMu$E`0R.ƒAZeabcd/YPXEKCZXYIGMNOXNMXPYCXGXN/ob5cUr3/findefghijklmnop/0123456789"
print(hex(ord('ƒ')))